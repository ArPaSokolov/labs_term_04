# функция для создания конечного автомата из образца
def create_automaton(pattern):
    # алфавит символов
    alphabet = list(set(pattern))
    # длина образца
    m = len(pattern)
    # количество состояний автомата + 0
    n = m + 1
    # словарь для хранения переходов автомата
    transitions = {}
    # идем по всем состояниям и по всем символам алфавита
    for i in range(n):
        for symb in alphabet:
            # вычисляем следующее состояние
            # next ищет индекс последнего вхождения символа symb в образец, начиная с позиции j
            k = next((j for j in range(min(m, i + 1), 0, -1) if pattern[j - 1] == symb), 0)
            # если текущий символ образца не найден, возвращаемся в начальное состояние

            # добавляем переход в словарь
            transitions[(i, symb)] = k

        # если символ не из алфавита, возвращаемся в начальное состояние
        transitions[(i, None)] = 0

    # возвращаем полученный конечный автомат
    return transitions


# поиск по образцу с помощью конечного автомата
def search(pattern, text):
    # создание конечного автомата из образца
    automaton = create_automaton(pattern)
    # длина строки поиска
    m = len(pattern)
    # текущее состояние автомата
    state = 0
    # список для хранения индексов вхождений
    matches = []
    # идем по всем символам исходной строки
    for i in range(len(text)):
        # обновляем состояния автомата с учетом текущего символа
        state = automaton.get((state, text[i]), automaton[(state, None)])  # получаем значение для ключа из словаря
        # если достигнуто конечное состояние
        if state == m:
            # добавляем индекс вхождения в список
            matches.append(i - m + 1)

    # возвращаем список индексов вхождений
    return matches


with open("input.txt", "r") as file:
    text = file.read()

# ввод строки поиска с клавиатуры
pattern = input("Введите строку поиска: ")

if pattern:
    # поиск всех вхождений строки с помощью конечного автомата
    matches = search(pattern, text)
    # вывод результата на экран
    if matches:
        print("Строка поиска найдена в исходной строке на следующих позициях:")
        print(*matches)  # вывод индексов найденных вхождений
    else:
        print("Строка поиска не найдена в исходной строке.")
else:
    print("Строка поиска не может быть пустой.")
